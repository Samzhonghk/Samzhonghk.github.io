<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Sam Zhong]]></title>
  <link href="http://samzhonghk.github.io/atom.xml" rel="self"/>
  <link href="http://samzhonghk.github.io/"/>
  <updated>2016-02-22T01:10:32+13:00</updated>
  <id>http://samzhonghk.github.io/</id>
  <author>
    <name><![CDATA[Sam Zhong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The disappeared pin menu in Xcode7]]></title>
    <link href="http://samzhonghk.github.io/blog/2016/02/21/the-disappeared-pin-menu-in-xcode7/"/>
    <updated>2016-02-21T17:26:01+13:00</updated>
    <id>http://samzhonghk.github.io/blog/2016/02/21/the-disappeared-pin-menu-in-xcode7</id>
    <content type="html"><![CDATA[<!--more-->


<p>We may all probably know the size of layout in Xcode can be changed by pin in the former versions.There are four choices can be used to reset the distances around the control,they are Top Space,Leading Space,Trailing Space and Bottom Space.</p>

<p>There are two methods can be selected to employ pin in Xcode6:
-Apply through the menu:Editor -> pin</p>

<p>-Apply the pin button which is located at the bottom of designer.</p>

<p><img class="left" src="http://samzhonghk.github.io/images/pinOld.png" width="450" height="450" title="image" alt="images"></p>

<p>There are some differences between these two methods.
-The top space distance to superview can be modified directly through the pin button on the menu(Editor->pin)</p>

<p>-The distance to the last view will be selected according to the distance of the presented view if using that pin button.(not necessarily superview)</p>

<h4>Unfortunely&hellip;the pin function can not be found anymore if the Xcode has been updated to Xcode7.</h4>

<h5>After long time searching,the answer has been found finally.</h5>

<p>The answer is right here:<a href="" title="http://stackoverflow.com/questions/28766210/autolayout-add-constraint-to-superview-and-not-top-layout-guide">How to use pin function after Xcode version5</a></p>

<p>There is an arrow towards the bottom on the right side,a couple choices will be appeared if the arrow is clicked.</p>

<p><img class="left" src="http://samzhonghk.github.io/images/pinNew.png" width="450" height="450" title="image" alt="images"></p>

<p>As we can see,the &ldquo;Top Layout Guide&rdquo; has been automatically clicked.The Superview can be controlled if the View button has been chosen.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS Browser Development Project]]></title>
    <link href="http://samzhonghk.github.io/blog/2016/01/25/ios-browser-development-project/"/>
    <updated>2016-01-25T03:03:45+13:00</updated>
    <id>http://samzhonghk.github.io/blog/2016/01/25/ios-browser-development-project</id>
    <content type="html"><![CDATA[<!--more-->


<p>This is a step by step tutorial of building a simple browser using single view application of Swift</p>

<h3>1.To create a new project by Swift using single view application in Xcode.</h3>

<h3>2.Open Main.storyboard file in project files and drag three view controllers to drawing area.</h3>

<p>They are:</p>

<h4>TextField</h4>

<h4>Button</h4>

<h4>Web View</h4>

<p><img class="left" src="http://samzhonghk.github.io/images/15.jpg" width="450" height="450" title="image" alt="images"></p>

<p>3.Drag those three view controllers to ViewController.swift file one by one pressing control button and the codes below will be generated.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='Swift'><span class='line'><span class="p">@</span><span class="kt">IBOutlet</span> <span class="k">weak</span> <span class="k">var</span> <span class="nl">urlInput</span><span class="p">:</span><span class="bp">UITextField</span><span class="o">!</span>
</span><span class='line'><span class="p">@</span><span class="kt">IBOutlet</span> <span class="k">weak</span> <span class="k">var</span> <span class="nl">urlButton</span><span class="p">:</span><span class="bp">UIButton</span><span class="o">!</span>
</span><span class='line'><span class="p">@</span><span class="kt">IBOutlet</span> <span class="k">weak</span> <span class="k">var</span> <span class="nl">webView</span><span class="p">:</span><span class="bp">UIWebView</span><span class="o">!</span>
</span></code></pre></td></tr></table></div></figure>


<p>4.Add an action event to the button</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='Swift'><span class='line'><span class="p">@</span><span class="kt">IBAction</span> <span class="k">func</span> <span class="n">buttonClick</span><span class="p">(</span><span class="nl">sender</span><span class="p">:</span><span class="n">AnyObject</span><span class="p">){</span>
</span><span class='line'>  <span class="c1">//Access via url</span>
</span><span class='line'>  <span class="nb">self</span><span class="p">.</span><span class="n">webview</span><span class="p">.</span><span class="n">loadRequest</span><span class="p">(</span><span class="bp">NSURLRequest</span><span class="p">(</span><span class="nl">URL</span><span class="p">:</span><span class="bp">NSURL</span><span class="p">(</span><span class="nl">string</span><span class="p">:</span><span class="n">urlInput</span><span class="p">.</span><span class="n">text</span><span class="o">!</span><span class="p">)</span><span class="o">!</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>5.Compile the codes with pressing command+R,the errors will be reported as:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Swift'><span class='line'><span class="n">wift_browser</span><span class="p">[</span><span class="mi">656</span><span class="o">:</span><span class="mi">22577</span><span class="p">]</span> <span class="n">App</span> <span class="n">Transport</span> <span class="n">Security</span> <span class="n">has</span> <span class="n">blocked</span> <span class="n">a</span> <span class="n">cleartext</span> <span class="n">HTTP</span> <span class="p">(</span><span class="nl">http</span><span class="p">:</span><span class="c1">//) resource load since it is insecure. Temporary exceptions can be configured via your app&#39;s Info.plist file.</span>
</span></code></pre></td></tr></table></div></figure>


<p>The HTTP resource request via HTTP(<a href="http://">http://</a>) will be recognized as insecure and the related configuration can be reconfigured via Info.plist file.</p>

<p><img class="left" src="http://samzhonghk.github.io/images/16.png" width="600" height="600" title="image" alt="images"></p>

<p>6.Finally,the project of the simple browser can be successfully compiled as below.</p>

<p><img class="left" src="http://samzhonghk.github.io/images/17.jpg" width="450" height="450" title="image" alt="images"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode project templates introduction]]></title>
    <link href="http://samzhonghk.github.io/blog/2016/01/21/Xcode-project-templates/"/>
    <updated>2016-01-21T19:00:09+13:00</updated>
    <id>http://samzhonghk.github.io/blog/2016/01/21/Xcode-project-templates</id>
    <content type="html"><![CDATA[<!--more-->


<p>Today I will be introducing the project templates in IOS development.</p>

<p>As we can see from the IOS templates board.There are four Application templates except for the game template.</p>

<p><img class="left" src="http://samzhonghk.github.io/images/4.jpg" width="450" height="450" title="image" alt="images"></p>

<h3>*Master-Detail Application</h3>

<h3>*Page-Based Application</h3>

<h3>*Single View Application</h3>

<h3>*Tabbed Application</h3>

<h2>Master-Detail Application</h2>

<p>This template provides a starting point for a master-detail application. It provides a user interface configured with a navigation controller to display a list of items and also a split view on iPad.</p>

<p><img class="left" src="http://samzhonghk.github.io/images/5.jpg" width="450" height="450" title="image" alt="images"></p>

<p>This is the initial template of Master-Detail Application.The information of date will be listed on the list below when the &lsquo;Plus Sign&rsquo; is clicked.</p>

<p><img class="left" src="http://samzhonghk.github.io/images/6.jpg" width="450" height="450" title="image" alt="images"></p>

<p>Afterward,the detail of the date will be shown when we click on the information bar.</p>

<p><img class="left" src="http://samzhonghk.github.io/images/7.jpg" width="450" height="450" title="image" alt="images"></p>

<p>The experienced programmers will find that the navigation mode for iPhone and Split mode for iPad have not been used.But Master-Detail Application is the combined mode of those two modes.
In fact,the Navigation mode can be used when the Master-Detail Application is chosen for iPhone and the Split mode can be used when the Master-Detail Application is taken for iPad.</p>

<p>The applications that are similar with Mail can be built using Master-Detail mode.
As we can see below,the navigation bar on the left hand side is master and the detail information on the right hand side of each mail is &lsquo;Detail&rsquo;.</p>

<p><img class="left" src="http://samzhonghk.github.io/images/8.png" width="450" height="450" title="image" alt="images"></p>

<p><img class="left" src="http://samzhonghk.github.io/images/9.png" width="450" height="450" title="image" alt="images"></p>

<h2>Tabbed Application</h2>

<p>This template provides a starting point for an application that uses a tab bar. It provides a user interface configured with a tab bar controller, and view controllers for the tab bar items.</p>

<p>The content of Tab bar and the related view controllers can be controlled by the codes.</p>

<p>The applications that are similar with iTunes can be built using Tabbed template.</p>

<p><img class="left" src="http://samzhonghk.github.io/images/12.jpg" width="450" height="450" title="image" alt="images"></p>

<p><img class="left" src="http://samzhonghk.github.io/images/13.jpg" width="450" height="450" title="image" alt="images"></p>

<h2>Page-Based Application</h2>

<p>This template provides a starting point for a page-based application that uses a page view controller.</p>

<p><img class="left" src="http://samzhonghk.github.io/images/11.jpg" width="450" height="450" title="image" alt="images"></p>

<p>The applications that are based on page can be generated using the &lsquo;Page-based Application&rsquo; mode.</p>

<p>As we can see below,the effects can be achieved using Page-Based Application.</p>

<p><img class="left" src="http://samzhonghk.github.io/images/10.jpg" width="450" height="450" title="image" alt="images"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Inheritance and Polymorphism in Swift]]></title>
    <link href="http://samzhonghk.github.io/blog/2016/01/08/the-inheritance-and-polymorphism-in-swift/"/>
    <updated>2016-01-08T13:28:07+13:00</updated>
    <id>http://samzhonghk.github.io/blog/2016/01/08/the-inheritance-and-polymorphism-in-swift</id>
    <content type="html"><![CDATA[<!--more-->


<h2>The Object-oriented of Swift</h2>

<h3>The characteristics of Inheritance</h3>

<p>1.Overriding the methods of super class.</p>

<p>2.Overriding the properties of super class.</p>

<p>3.Overriding the setter of the attributes.</p>

<p>4.Overriding the subscriber of the super class.</p>

<p>5.To prevent overriding with final.</p>

<p>-Single Inheritance:All the subclasses can only be inherited from one single base class.Nevertheless they can have more than one indirect super classes.</p>

<p>-The properties,methods and subscribers can be overridden in subclasses once they have been inherited from super class.</p>

<p>-The properties,methods and subscribers can be obtained once they have been inherited from the super classes.</p>

<p>-The classes in Swift are not inherited from one single base class in common.</p>

<p>-The key word &ldquo;override&rdquo; will be needed to declared when the inherited part needs to be overridden.</p>

<h4>Now let us get started from an simple example</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='Swift'><span class='line'><span class="k">import</span> <span class="n">Foundation</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="n">Fruit</span><span class="p">{</span>
</span><span class='line'>  <span class="k">var</span> <span class="n">weight</span> <span class="o">=</span> <span class="mf">0.0</span><span class="p">;</span>
</span><span class='line'>  <span class="k">func</span> <span class="nf">info</span><span class="p">()</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="n">print</span><span class="p">(</span><span class="s">&quot;This is a fruit,it is \(weight)g!&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nl">Apple</span><span class="p">:</span><span class="n">Fruit</span><span class="p">{</span>
</span><span class='line'>  <span class="k">var</span> <span class="nl">name</span><span class="p">:</span><span class="n">String</span><span class="o">!</span><span class="p">;</span>
</span><span class='line'>  <span class="k">func</span> <span class="nf">taste</span><span class="p">()</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="n">print</span><span class="p">(</span><span class="s">&quot;\(name) is super tasty!&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">var</span> <span class="n">a</span> <span class="o">=</span> <span class="n">Apple</span><span class="p">();</span>
</span><span class='line'><span class="c1">//Class Apple has no property of weight.</span>
</span><span class='line'><span class="c1">//The weight property can be performed in class Apple since class Fruit is the base class of class Apple.</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="p">.</span><span class="n">weight</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
</span><span class='line'><span class="n">a</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">&quot;Big Apple&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1">//Both the properties from subclasses itself and inheritance classed can be initialized after the object has been created.</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="p">.</span><span class="n">info</span><span class="p">();</span>
</span><span class='line'><span class="n">a</span><span class="p">.</span><span class="n">taste</span><span class="p">();</span>
</span><span class='line'><span class="c1">//Both the methods from super classes and subclasses can be performed once the object of the subclass has been created.</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Overriding the methods of base class</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='Swift'><span class='line'><span class="k">class</span> <span class="n">Bird</span><span class="p">{</span>
</span><span class='line'>  <span class="c1">//A method called &#39;fly&#39;</span>
</span><span class='line'>  <span class="kr">override</span> <span class="k">func</span> <span class="n">fly</span><span class="p">(){</span>
</span><span class='line'>    <span class="n">print</span><span class="p">(</span><span class="s">&quot;I can be flying in the sky&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nl">Ostrich</span><span class="p">:</span><span class="n">Bird</span><span class="p">{</span>
</span><span class='line'>  <span class="c1">//Overriding the &#39;fly&#39; method of class Bird</span>
</span><span class='line'>  <span class="kr">override</span> <span class="k">func</span> <span class="n">fly</span><span class="p">(){</span>
</span><span class='line'>    <span class="n">print</span><span class="p">(</span><span class="s">&quot;I can be running on the ground&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Create an object of Ostrich</span>
</span><span class='line'><span class="k">var</span> <span class="n">os</span> <span class="o">=</span> <span class="n">Ostrich</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Apply the &#39;fly&#39; method of the subclass &#39;Ostrich&#39;,then the sentence &#39;I can be running on the ground&#39; will be printed.</span>
</span><span class='line'>
</span><span class='line'><span class="n">os</span><span class="p">.</span><span class="n">fly</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Overriding the subscriber of base classes.</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='Swift'><span class='line'><span class="k">class</span> <span class="n">Base</span><span class="p">{</span>
</span><span class='line'>  <span class="k">subscript</span><span class="p">(</span><span class="nl">idx</span><span class="p">:</span><span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Int</span><span class="p">{</span>
</span><span class='line'>    <span class="kr">get</span><span class="p">{</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;The get method of subscript of base class.&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">idx</span><span class="o">+</span><span class="mi">10</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nl">Sub</span><span class="p">:</span><span class="n">Base</span><span class="p">{</span>
</span><span class='line'>  <span class="c1">//Override the subscript of base class</span>
</span><span class='line'>  <span class="kr">override</span> <span class="k">subscript</span><span class="p">(</span><span class="nl">idx</span><span class="p">:</span><span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Int</span><span class="p">{</span>
</span><span class='line'>    <span class="kr">get</span><span class="p">{</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;The get method of subscript after overriding.&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;Access the overriding subscript through super.\(super[idx])&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">idx</span><span class="o">*</span><span class="n">idx</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kr">set</span><span class="p">{</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;The setter method after overriding,the value is \(newValue)&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">var</span> <span class="n">base</span> <span class="o">=</span> <span class="n">Base</span><span class="p">();</span>
</span><span class='line'><span class="n">print</span><span class="p">(</span><span class="n">base</span><span class="p">[</span><span class="mi">7</span><span class="p">]);</span>   <span class="c1">//17 will be output</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Create an object of class Sub</span>
</span><span class='line'><span class="k">var</span> <span class="n">sub</span> <span class="o">=</span> <span class="n">Sub</span><span class="p">();</span>
</span><span class='line'><span class="n">print</span><span class="p">(</span><span class="n">sub</span><span class="p">[</span><span class="mi">7</span><span class="p">]);</span>   <span class="c1">//49 will be output</span>
</span><span class='line'><span class="n">sub</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span> <span class="o">=</span> <span class="mi">90</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Override the properties of super class</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='Swift'><span class='line'><span class="k">class</span> <span class="n">Bird</span><span class="p">{</span>
</span><span class='line'>  <span class="k">var</span> <span class="nl">speed</span><span class="p">:</span><span class="n">Double</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nl">Ostrich</span><span class="p">:</span><span class="n">Bird</span><span class="p">{</span>
</span><span class='line'>  <span class="c1">//Override the property &#39;speed&#39; of Bird</span>
</span><span class='line'>  <span class="kr">override</span> <span class="k">var</span> <span class="nl">speed</span> <span class="p">:</span><span class="n">Double</span><span class="p">{</span>
</span><span class='line'>    <span class="kr">get</span><span class="p">{</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;Accessing the overridden property&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="nb">super</span><span class="p">.</span><span class="n">speed</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="kr">set</span><span class="p">{</span>
</span><span class='line'>      <span class="nb">super</span><span class="p">.</span><span class="n">speed</span> <span class="o">=</span> <span class="n">newValue</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Create an object of Ostrich</span>
</span><span class='line'><span class="k">var</span> <span class="n">os</span> <span class="o">=</span> <span class="n">Ostrich</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Assign a new value to the overridden property</span>
</span><span class='line'><span class="n">os</span><span class="p">.</span><span class="n">speed</span> <span class="o">=</span> <span class="mf">20.0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//output the overridden property</span>
</span><span class='line'><span class="n">print</span><span class="p">(</span><span class="s">&quot;The speed of os is \(os.speed)&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Overriding the attributes observer of base class</h3>

<p>When a new property needs to be added for an inherited property, &lsquo;property overriding&rsquo; concept is introduced in Swift. This notifies the user when the inherited property value is altered. But overriding is not applicable for inherited constant stored properties and inherited read-only computed properties.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='Swift'><span class='line'><span class="k">class</span> <span class="n">Bird</span><span class="p">{</span>
</span><span class='line'>  <span class="k">var</span> <span class="nl">speed</span><span class="p">:</span><span class="n">Double</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nl">Ostrich</span><span class="p">:</span><span class="n">Bird</span><span class="p">{</span>
</span><span class='line'>  <span class="c1">//Override the property &#39;speed&#39; of Bird,adding the attributes observer</span>
</span><span class='line'>  <span class="kr">override</span> <span class="k">var</span> <span class="nl">speed</span><span class="p">:</span><span class="n">Double</span><span class="p">{</span>
</span><span class='line'>    <span class="n">didset</span><span class="p">{</span>
</span><span class='line'>      <span class="c1">//The method will be automatically performed after the value of the attribute has been changed.</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;The value of speed will be \(oldValue) after changes&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="nb">super</span><span class="p">.</span><span class="n">speed</span> <span class="o">*=</span> <span class="n">speed</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Create the object of Ostrich</span>
</span><span class='line'><span class="k">var</span> <span class="n">os</span> <span class="o">=</span> <span class="n">Ostrich</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Assign new value to attribute after overriding.</span>
</span><span class='line'><span class="n">os</span><span class="p">.</span><span class="n">speed</span> <span class="o">=</span> <span class="mf">20.0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Output the overridden attribute</span>
</span><span class='line'><span class="n">print</span><span class="p">(</span><span class="s">&quot;The speed of the os is \(os.speed)&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Final property to prevent Overridding</h3>

<p>When the user need not want others to access super class methods, properties or subscripts swift introduces &lsquo;final&rsquo; property to prevent overriding. Once &lsquo;final&rsquo; property is declared the subscripts won&rsquo;t allow the super class methods, properties and its subscripts to be overridden. There is no provision to have &lsquo;final&rsquo; property in &lsquo;super class&rsquo;. When &lsquo;final&rsquo; property is declared the user is restricted to create further sub classes.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='Swift'><span class='line'><span class="n">final</span> <span class="k">class</span> <span class="n">Base</span><span class="p">{</span>
</span><span class='line'>  <span class="n">final</span> <span class="k">var</span> <span class="nl">name</span><span class="p">:</span><span class="n">String</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">final</span> <span class="k">func</span> <span class="nf">say</span><span class="p">(</span><span class="nl">content</span><span class="p">:</span><span class="n">String</span><span class="p">){</span>
</span><span class='line'>    <span class="n">print</span><span class="p">(</span><span class="s">&quot;Base says \(content)&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">final</span> <span class="nf">subscript</span><span class="p">(</span><span class="nl">idx</span><span class="p">:</span><span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Int</span><span class="p">{</span>
</span><span class='line'>    <span class="kr">get</span><span class="p">{</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;The get method of subscript of base class&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">idx</span> <span class="o">+</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nl">Sub</span><span class="p">:</span><span class="n">Base</span><span class="p">{</span>
</span><span class='line'>  <span class="kr">override</span> <span class="k">var</span> <span class="nl">name</span><span class="p">:</span><span class="n">String</span><span class="p">{</span>
</span><span class='line'>    <span class="kr">get</span><span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;the prefixion of subclass&quot;</span> <span class="o">+</span> <span class="nb">super</span><span class="p">.</span><span class="n">name</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img class="left" src="http://samzhonghk.github.io/images/2.jpg" width="950" height="950" title="image" alt="The errors after compiling"></p>

<p>*since the super class is declared as &lsquo;final&rsquo; and its data types are also declared as &lsquo;final&rsquo; the program won&rsquo;t allow to create subclasses further and it will throw errors.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Set Up Octopress on OS X10.10.5]]></title>
    <link href="http://samzhonghk.github.io/blog/2016/01/06/set-up-octopress-on-osx10-dot-10-dot-5/"/>
    <updated>2016-01-06T18:03:44+13:00</updated>
    <id>http://samzhonghk.github.io/blog/2016/01/06/set-up-octopress-on-osx10-dot-10-dot-5</id>
    <content type="html"><![CDATA[<!--more-->


<p>This tutorial will be directing to create your own personal blog using Octopress on OS X10.10.5 and host it on github.</p>

<p>The Octopress information can be obtained from <a href="http://octopress.org/docs/">Octopress offical website</a></p>

<h2>Prerequisites on OS X10.10</h2>

<h3>Install git</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo add-apt-repository ppa:git-core/ppa
</span><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install git</span></code></pre></td></tr></table></div></figure>


<h3>Install ruby</h3>

<h4>Add the PPA and install the package</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-add-repository -y ppa:rael-gc/rvm
</span><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install rvm</span></code></pre></td></tr></table></div></figure>


<h4>Install a ruby</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm install ruby
</span><span class='line'>rvm rubygems latest</span></code></pre></td></tr></table></div></figure>


<p>To verify</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby --version</span></code></pre></td></tr></table></div></figure>


<h2>Prerequisites on OS X</h2>

<h3>Install homebrew</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"</span></code></pre></td></tr></table></div></figure>


<h3>Install git</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew install git</span></code></pre></td></tr></table></div></figure>


<p>To verify</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git --version</span></code></pre></td></tr></table></div></figure>


<h3>Install ruby</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -L https://get.rvm.io | bash -s stable --auto-dotfiles --autolibs=enable --ruby</span></code></pre></td></tr></table></div></figure>


<h2>Set up octopress</h2>

<h3>Install rake</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo gem install rake</span></code></pre></td></tr></table></div></figure>


<h3>Setup octopress</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>cd octopress</span></code></pre></td></tr></table></div></figure>


<h3>Install octopress default theme</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo gem install bundler
</span><span class='line'>bundle install
</span><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<h3>Install other theme (optional)</h3>

<p>Install <a href="https://github.com/erikzaadi/solarized-octopress-theme">solarized</a> theme instead of default theme for this blog.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd octopress
</span><span class='line'>git clone http://github.com/erikzaadi/solarized-octopress-theme .themes/solarized
</span><span class='line'>rake install["solarized"]
</span><span class='line'>rake generate</span></code></pre></td></tr></table></div></figure>


<p><strong>NOTE:</strong> For zsh users, try <code>rake install\['solarized'\]</code></p>

<p>For more themes, checkout <a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes" title="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">3rd Party Octopress Themes</a></p>

<h3>Github setup</h3>

<ul>
<li><p>Create a github account and my account is <a href="https://github.com/samzhonghk" title="https://github.com/samzhonghk"><code>samzhonghk</code></a>.</p></li>
<li><p>Create a new Github repository and name the repository with the format username.github.io, where username is your GitHub user name or organization name.In this case, the repository is <a href="https://github.com/samzhonghk/samzhonghk.github.io" title="https://github.com/samzhonghk/samzhonghk.github.io"><code>samzhonghk.github.io</code></a></p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<p>The rake task will ask you for a URL of the Github repo. Copy the SSH or HTTPS URL from your newly created repository
(in this case, <a href="https://github.com/samzhonghk/samzhonghk.github.io.git">https://github.com/samzhonghk/samzhonghk.github.io.git</a>) and paste it in as a response.</p>

<p>This will:</p>

<ul>
<li>Ask for and store your Github Pages repository url.</li>
<li>Rename the remote pointing to imathis/octopress from &lsquo;origin&rsquo; to &lsquo;octopress&rsquo;</li>
<li>Add your Github Pages repository as the default origin remote.</li>
<li>Switch the active branch from master to source.</li>
<li>Configure your blog&rsquo;s url according to your repository.</li>
<li>Setup a master branch in the _deploy directory for deployment.</li>
</ul>


<h3>Create a new post</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post["Your Title"]</span></code></pre></td></tr></table></div></figure>


<p>A new markdown file named <code>Your Title</code> is created in <code>source/_posts</code> folder.</p>

<h3>Preview</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p>You can preview these posts on your local server <a href="http://localhost:4000" title="http://localhost:4000">http://localhost:4000</a></p>

<p><code>new_post</code> expects a naturally written title and strips out undesirable url characters when creating the filename.
The default file extension for new posts is markdown but you can configure that in the Rakefile.</p>

<h3>Deploy</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<p><strong>Do not forget</strong> to push source branch to github.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add .
</span><span class='line'>git commit -m 'your message'
</span><span class='line'>git push origin source</span></code></pre></td></tr></table></div></figure>


<h3>Config in Rakefile(optional)</h3>

<h4>Change extension name of new posts</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>new_post_ext = "md"  # default new post file extension when using the new_post task</span></code></pre></td></tr></table></div></figure>


<h3>References</h3>

<ul>
<li><p><a href="https://github.com/rvm/ubuntu_rvm">https://github.com/rvm/ubuntu_rvm</a></p></li>
<li><p><a href="http://pangyi.github.io/blog/20150125/ubuntuzhong-octopressan-zhuang">http://pangyi.github.io/blog/20150125/ubuntuzhong-octopressan-zhuang</a></p></li>
<li><p><a href="https://github.com/tommy351/Octopress-Theme-Slash">https://github.com/tommy351/Octopress-Theme-Slash</a></p></li>
<li><p><a href="http://codelife.me/blog/2012/09/02/custom-domain-for-octopress">http://codelife.me/blog/2012/09/02/custom-domain-for-octopress</a></p></li>
<li><p><a href="https://www.moncefbelyamani.com/how-to-install-xcode-homebrew-git-rvm-ruby-on-mac">https://www.moncefbelyamani.com/how-to-install-xcode-homebrew-git-rvm-ruby-on-mac</a></p></li>
<li><p><a href="https://www.moncefbelyamani.com/how-to-install-and-configure-octopress-on-a-mac">https://www.moncefbelyamani.com/how-to-install-and-configure-octopress-on-a-mac</a></p></li>
<li><p><a href="http://asaf.github.io/blog/2013/07/08/blogging-with-octopress-add-comments">http://asaf.github.io/blog/2013/07/08/blogging-with-octopress-add-comments</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My first post]]></title>
    <link href="http://samzhonghk.github.io/blog/2016/01/05/my-first-post/"/>
    <updated>2016-01-05T19:01:52+13:00</updated>
    <id>http://samzhonghk.github.io/blog/2016/01/05/my-first-post</id>
    <content type="html"><![CDATA[<p>Happy new year everyone!Welcome to new 2016.</p>

<p>Recently I found that github is an awesome platform for sharing codes.Free space and domain can be provided for blogging.</p>

<p>Hopefully this is a good start to share my experience with everyone and get started to learn fresh tech stuff.</p>

<p><img class="left" src="http://samzhonghk.github.io/images/1.jpg" width="350" height="350" title="image" alt="images"></p>
]]></content>
  </entry>
  
</feed>
